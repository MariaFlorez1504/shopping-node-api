<h1>Productos</h1>

<!-- Barra de filtros -->
<form id="filterForm" style="margin-bottom: 20px;">
  <label>Categor√≠a:</label>
  <input type="text" name="query" placeholder="Ej. Electronics">
  
  <label>Disponibilidad:</label>
  <select name="queryStatus">
    <option value="">Todas</option>
    <option value="true">Disponibles</option>
    <option value="false">No disponibles</option>
  </select>

  <label>Ordenar por precio:</label>
  <select name="sort">
    <option value="">Sin orden</option>
    <option value="asc">Ascendente</option>
    <option value="desc">Descendente</option>
  </select>

  <label>L√≠mite:</label>
  <input type="number" name="limit" value="10" min="1">

  <button type="submit">Aplicar</button>
</form>

<!-- Lista de productos -->
<div id="productList">
  {{#each products}}
    <div style="border: 1px solid #ccc; padding: 10px; margin-bottom: 10px;">
      <h3>{{title}}</h3>
      <p>{{description}}</p>
      <p><strong>Precio:</strong> ${{price}}</p>
      <p><strong>Categor√≠a:</strong> {{category}}</p>
      <p><strong>Stock:</strong> {{stock}}</p>
      <p><strong>Disponible:</strong> {{status}}</p>
      <button class="add-to-cart" data-id="{{_id}}">üõí Agregar al carrito</button>
    </div>
  {{/each}}
</div>

<!-- Paginaci√≥n -->
<div style="margin-top: 20px;">
  {{#if hasPrevPage}}
    <a href="{{prevLink}}">‚¨Ö Anterior</a>
  {{/if}}

  <span>P√°gina {{page}} de {{totalPages}}</span>

  {{#if hasNextPage}}
    <a href="{{nextLink}}">Siguiente ‚û°</a>
  {{/if}}
</div>

<script>

  // Filtros
  document.getElementById("filterForm").addEventListener("submit", function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    
    let params = [];
    if (formData.get("query")) params.push("query=" + encodeURIComponent(formData.get("query")));
    if (formData.get("queryStatus")) params.push("query=" + formData.get("queryStatus"));
    if (formData.get("sort")) params.push("sort=" + formData.get("sort"));
    if (formData.get("limit")) params.push("limit=" + formData.get("limit"));

    window.location.href = "/products" + (params.length ? "?" + params.join("&") : "");
  });

  // Agregar al carrito
  document.querySelectorAll(".add-to-cart").forEach(button => {
    button.addEventListener("click", async () => {
      const productId = button.getAttribute("data-id");
      const cartId = localStorage.getItem('cartId') || "{{cartId}}"; // ID del carrito
      try {
        const res = await fetch(`/api/carts/${cartId}/product/${productId}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ quantity: 1 })
        });

        if (res.ok) {
          alert("‚úÖ Producto agregado al carrito");
        } else {
          alert("‚ùå Error al agregar al carrito");
        }
      } catch (err) {
        console.error(err);
        alert("‚ö† Error de conexi√≥n");
      }
    });
  });
</script>
